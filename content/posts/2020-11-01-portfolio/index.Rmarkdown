---
title: Secondary School Student Performance 
author: Brendan
date: '2020-11-01'
slug: studentperf
draft: false
categories: []
tags: []
hero: /images/site/school.jpg
bibliography: ["references.bib"]
biblio-style: "apalike"
link-citations: true
---


# Introduction

I am writing this blog as part of an assignment. My Details:

 |
------------- | -------------
Student Name: | B Kent
Student Number: | cxxxxxxxx
Programme Code: | TU060
Version R: | R version 4.0.3 (2020-10-10)
R packages: | 


# Getting started

We explore a student exam performance data set. This is a data set about secondary school academical achievements in Portugal. The data contains two set of results, one set for results in Maths and one set for results in Portuguese. These are merged together to form one data set which I will endeavor to break down in order to learn about the basic properties of statistics, describing the Frequency and probabilities, hypothesis testing, Normality, Missing data, Relationships, Component Analysis and more. 

This data set is from a paper by P.Cortez and A. Silva entitled "Using  Data  Mining  to  Predict  Secondary  School  Student  Performance". [@cortez2008using]




We need to get the data
```{r, echo=TRUE}
library("dplyr")
library("tidyr")
library("viridis")
library("finalfit") # for ff_glimpse(studentdf)
library("gridExtra") # for plots in a grid
library("ggplot2") # For creating histograms and plots
#download.file(url="https://archive.ics.uci.edu/ml/machine-learning-databases/00320/student.zip", destfile="student.zip")
#unzip("student.zip",exdir = "studentdf")
list.files("studentdf")
```

data set description: [https://archive.ics.uci.edu/ml/datasets/student+performance#](https://archive.ics.uci.edu/ml/datasets/student+performance#) or [here](/blog/description/)

read in the data
```{r echo=TRUE, comment=""}
matdf=read.table("studentdf/student-mat.csv",sep=";",header=TRUE, stringsAsFactors=TRUE)
pordf=read.table("studentdf/student-por.csv",sep=";",header=TRUE, stringsAsFactors=TRUE)

studentdf=merge(x=matdf,y=pordf,by=c("school","sex","age","address","famsize","Pstatus","Medu","Fedu","Mjob","Fjob","reason","nursery","internet"))
colnames(studentdf) <- tolower(colnames(studentdf))
nrow(studentdf)
```

So we have 382 records in our data set. 

Let's see what variables we have in each record.
```{r}
colnames(studentdf)
```


The data set measures the grades for each students achievements at three time intervals, g1, g2 and g3. So grades at g1 and g2 can been used to predict g3, and from the paper, it can be seen that there is a strong correlation between g3 and g2/g1.

let's us pick a random student:
```{r paged.print=FALSE}
studentdf %>% 
  sample_n(1) 
```
## Population vs Sample

We are interested in finding results for the entire population of students that have completed exams in maths and Portuguese in Portugal, but we know that is not possible, so what we have is a sample. We will use this sample to infer things about the population as a whole. 

The numbers used to describe a population are called parameters, whereas for our sample which is a subset of the pollution, we call them statistics. 

Samples are collected because there are easier to contact, less time consuming and less costly. 

However taking samples as shortcut to finding out answers about a population is always prone to sampling error.  

We now need to ask ourselves some questions. 

* Does our sample represent the population well?
* Is our sample biased? 

In order to answer these questions, we need to explore the data. The first thing we know is that the size of the data set is 382. Usually the bigger the sample the more likely it is to reflect the whole population. It is not enough to simply use the number of records to tell us whether we have a sample that represents the population. 

We need to have some understanding of the population in order to make this decision about our sample representing the population. First thing we know is that this data comes from two Portuguese schools, so if we find some statistics from this data set, we can't say that this applies to students all over the world. We can only use this results as a pointer to further research. 

We ask ourselves this question, because in the end we want to be able to create a model that describes the population, not a model which only describes the sample.

We will show later that there are many statistical tests we can do on a sample set of data to see if we can infer anything about the population. Also we will show that through the use of hypotheses testing we can decide whether there is a relationship in the sample data that is strong enough to use to model the relationship in the population. 

Now to the 2nd question, a biased sample is one which differs from the population from which it is taken. This can happen if the sample is not collected randomly. If the students in this sample were picked, then it would not be a representative sample. 
There is a limit to this randomness, we have to acknowledge that, looking at the paper[@cortez2008using], we see that data was only collected during one year and only in two public schools. This year and these schools might not represent the population's Portugese school system in other parts of the country and in other years. Doing a quick Google search I can see that these schools are in rural and less dense areas of Portugal. 

<iframe src="https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3194283.005649975!2d-10.17086483750003!3d38.57024409999999!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0xd19e50ed36b8271%3A0xa2f44287b70a82c0!2sEscola%20Gabriel%20pereira!5e0!3m2!1sen!2sie!4v1604499877562!5m2!1sen!2sie" width="300" height="450" frameborder="0" style="border:0;" allowfullscreen="" aria-hidden="false" tabindex="0"></iframe>
<iframe src="https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d4445653.247860987!2d-10.805082784867597!3d39.909816886764695!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x0%3A0x39781f2296c8dbc3!2sMouzinho%20da%20Silveira%20High%20School!5e0!3m2!1sen!2sie!4v1604501863240!5m2!1sen!2sie" width="300" height="450" frameborder="0" style="border:0;" allowfullscreen="" aria-hidden="true" tabindex="0"></iframe>

```{r, echo=FALSE, fig.cap="Population density of Portugal @wikiportmap", out.width = '60%' , fig.align = "center"}
knitr::include_graphics("https://upload.wikimedia.org/wikipedia/commons/b/b1/Densidade_populacional_por_concelho_-_INE_2001.png")
```

We can also check the if the sample percentages match what we would imagine for a population, for example:
Let checks the students involved, are both sexes represented  
counts:
```{r, echo=FALSE}
.Table <- with(studentdf, table(sex))
.Table
```
Percentages
```{r, echo=FALSE}
round(100*.Table/sum(.Table), 2)
```

It is very important that when choosing a sample that any missing data is also random, that there is not pattern between the variables which are missing. 

To make good decisions to the questions outlined above, we will calculate some simple statistics for our sample. These statistics we will start to examine in the next section.

## How to infer from a sample to a population

In order to show how well a sample is representing a population we need to understand some basics about the variables in our data set.
Each variable falls into a "level of Measurement" category. There are 4 levels:

* Nominal - or Categorical, can we binary variables such as dead or alive or nominal like Guinness, Harp, Smithwicks.
* Ordinal - kinda of the same as nominal but have an order, like A,B,C for an exam result. 
* Interval - have a score and the differences between these scores are equivalent. 
* Ratio - same as interval but the score of say 12 must mean twice a score of 6. 0 has a meaning. 

So depending on the variable of interest in the record, we can make small basic models to see if we can infer information about the population from it. The first is mean. First thing we should note is that you can only get a mean from variable which are either interval or Ratio (these types are referred to as numeric in [here](/blog/description/)). The other types types such as Nominal and Ordinal don't have a mean. They use other statistics to describe what we call a Central Tendency. Here is a table to explain:

level | Mode | Median | Mean
---|---|---|---
Nominal | yes | no | no 
Ordinal | yes | yes | no 
Interval | yes | yes | yes 
Ratio | yes | yes | yes 

The best measure of Central Tendency is Mean if it is available for that level. If not, then median and if not median then mode. However whether to choose mean or median depends on another term called "skew". If a variable has skew then median may be better than mode. 

To explain these levels, we will use examples in our data set. An example of a Nominal variable, a Numeric variable and a Ratio variable. 

Ratio in the student data set is "g3"
```
32 G3 - final grade (numeric: from 0 to 20, output target)
```
Nominal in student data set is "reason"
```
11 reason - reason to choose this school (nominal: close to "home", school "reputation", "course" preference or "other")
```
Ordinal in student data set is "studytime"
```
14 studytime - weekly study time (numeric: 1 - <2 hours, 2 - 2 to 5 hours, 3 - 5 to 10 hours, or 4 - >10 hours)
```

## G3 - Final Grade (Ratio)

In this section we will explore the variable G3 in our data set. The Grade G3 variable is a ratio variable because zero has a meaning in this variable. The grade results begins at zero and a student who got 16 did twice as well as a student who received 8. 

### Normal Distrubution  

We would like to find a variable which has a normal distribution, because we can use parametric tests on this variable. This is ideal when we want to make inference from our sample to our population. These parametric tests are more powerful because they use all values a variable has. Let's check if grade results fits the bill for us. 

Finally we get to draw a chart. First the humble scatter plot:
```{r, echo=FALSE, fig.cap="G3 - final grade unsorted"}
ggplot(data = studentdf, aes(x = as.numeric(row.names(studentdf)), y = g3.x)) +  geom_point() + labs(y="G3 - final grade")
```


Or if we sort the grades in ascending order.
```{r, echo=FALSE, fig.cap="G3 - final grade sorted"}
ggplot(data = studentdf, aes(x = as.numeric(row.names(studentdf)), y = sort(g3.x))) +  geom_point() + labs(y="G3 - final grade")
```

We can see here that there are grade marked as 0. We don't know if that means the student didn't do the exam or they got 0 after attempting it. That's `r round(sum(studentdf$g3.x == 0, na.rm = TRUE) / length(studentdf$g3.x) * 100 , 2)` % of the data. 

To understand skew we need to starting visualizing the data. We do this by plotting what is known as a frequency distribution or histogram.  
```{r, echo=FALSE, fig.cap="G3 - final grade histogram", warning=FALSE}
library(ggplot2) # For creating histograms and plots
#We will allocate the histogram to a variable to allow use to manipulate it
gg <- ggplot(studentdf, aes(x=g3.x))
#Change the label of the x axis
gg <- gg + labs(x="G3 - final grade")
#manage binwidth and colours
gg <- gg + geom_histogram(binwidth=1, colour="black", aes(y=..density.., fill=..count..))
gg <- gg + scale_fill_gradient("Count", low="grey", high="green")
gg
```

From the Frequency distribution chart we can say that the zeros are outliers here, as we said above. WHy? because we expect the distribution for grade results to be normal, to match what we call a [Normal Distrbtion](https://www.mathsisfun.com/data/standard-normal-distribution.html). All normal distributions are symmetric and have bell-shaped density curves with a single peak. This histogram above is bimodal because of the zeros. We will remove those now, for all grade results. 

```{r, echo=FALSE, warning=FALSE}
studentdf$g1.x[studentdf$g1.x == 0] <- NA
studentdf$g2.x[studentdf$g2.x == 0] <- NA
studentdf$g3.x[studentdf$g3.x == 0] <- NA
studentdf$g1.y[studentdf$g1.x == 0] <- NA
studentdf$g2.y[studentdf$g2.x == 0] <- NA
studentdf$g3.y[studentdf$g3.x == 0] <- NA
```

These zeros which we find the grade results could also be a result of missing data. 
and now again we check the histogram

```{r, echo=FALSE, fig.cap="G3 - final grade histogram no zeros", warning=FALSE}
library(ggplot2) # For creating histograms and plots
#We will allocate the histogram to a variable to allow use to manipulate it
gg <- ggplot(studentdf, aes(x=g3.x))
#Change the label of the x axis
gg <- gg + labs(x="G3 - final grade")
#manage binwidth and colours
gg <- gg + geom_histogram(binwidth=1, colour="black", aes(y=..density.., fill=..count..))
gg <- gg + scale_fill_gradient("Count", low="grey", high="green")
gg
```

This is much better. Let's check the Central Tendency measure for this variable

### Central Tendency 
For G3 - final grade in maths

stat|desc|value
--|--|--
mean| average |  `r mean(studentdf$g3.x, na.rm = TRUE)`
median| ranked in order of magnitude, find middle |  `r median(studentdf$g3.x, na.rm = TRUE)`

### Dispersion 
For G3 - final grade in maths

stat|desc|value
--|--|--
Range | lowest and highest | `r range(studentdf$g3.x, na.rm = TRUE)`
Quantiles | cut in 1/4ths | `r quantile(studentdf$g3.x, na.rm = TRUE)`
1st quantile | 1st 1/4 |  `r x=quantile(studentdf$g3.x, na.rm = TRUE); x[1]`
Interquartile Range | cut off the 1st 1/4 and last 1/4| `r IQR(studentdf$g3.x, na.rm = TRUE)`
Variance |The average of the squared differences from the Mean | `r var(studentdf$g3.x, na.rm = TRUE)`
Standard deviation | the square root of the variance | `r sd(studentdf$g3.x, na.rm = TRUE)`

There are two main ways in which a distribution can deviate from normal: 

1. lack of symmetry (called **skew** ) and 
2. pointyness (called **kurtosis** )

Like plot the histogram again and add a normal distribution curve using the grade scores:
```{r, echo=FALSE, fig.cap="G3 - final grade histogram with normal curve"}
library(ggplot2) # For creating histograms and plots
#We will allocate the histogram to a variable to allow use to manipulate it
gg <- ggplot(studentdf, aes(x=g3.x))
#Change the label of the x axis
gg <- gg + labs(x="G3 - final grade")
#manage binwidth and colours
gg <- gg + geom_histogram(binwidth=1, colour="black", aes(y=..density.., fill=..count..))
gg <- gg + scale_fill_gradient("Count", low="grey", high="green")
#adding a normal curve
#use stat_function to compute a normalised score for each value of tpcoiss
#pass the mean and standard deviation
#use the na.rm parameter to say how missing values are handled
gg <- gg + stat_function(fun=dnorm, color="red",args=list(mean=mean(studentdf$g3.x, na.rm=TRUE), sd=sd(studentdf$g3.x, na.rm=TRUE)))

#to display the graph request the contents of the variable be shown
gg
```

From a look at this histogram we can say that the Skew is visible. We can see that there is positive skew. 
The kurtosis does not look to be a problem. 

We not need to examine that skew in detail. There is another useful graph that we can inspect to see if a distribution is normal called a
Q-Q plot (quantile–quantile plot). A quantile is the proportion of cases we find below a certain value.

```{r, echo=FALSE, fig.cap="G3 - final grade Q-Q plot"}
#Create a qqplot
qqnorm(studentdf$g3.x)
qqline(studentdf$g3.x, col=2) #show a line on theplot
```

The closer the values fall on the diagonal of the plot, the closer the fit we have for a normal distribution.

We can get values now for Skew and kurtosis. The values of skew and kurtosis should be zero
in a normal distribution. Positive values of skew indicate a postive skew. Positive values of
kurtosis indicate a pointy distribution, whereas negative values indicate a flat distribution.


Generating some summary statistics of the varaible. There are two libraries in R for this:
using psych::describe :
```{r}
knitr::kable(stack(psych::describe(studentdf$g3.x)))
```

using pastecs::stat.desc :

```{r}
options(scipen=999)
knitr::kable(pastecs::stat.desc(studentdf$g3.x, basic = FALSE, norm = TRUE))
```
```{r, echo=FALSE,eval=FALSE}
pastecs::stat.desc(studentdf$g3.x, basic = FALSE, norm = TRUE)
```
We divide the skew statistic by the standard error to get the standardised core for skew and kurtosis
using semTools::skew :
```{r, message=FALSE, warning=FALSE}
tpskew<-semTools::skew(studentdf$g3.x)
tpskew
```
and semTools::kurtosis :
```{r, message=FALSE, warning=FALSE}
tpkurt<-semTools::kurtosis(studentdf$g3.x)
tpkurt
```

Skew and kurtosis are converted to z-scores by dividing by the standard error:
```{r}
tpskew[1]/tpskew[2]
tpkurt[1]/tpkurt[2]
```
Before exploring skew and kurtosis, we need to understand a key term "Confidence interval" and "Z-score"

### Confidence interval

In statistics we use confidence intervals to show how sure we are that a value would fall in a range of values. 

The common confidence intervals used are 90%, 95% and 99%. The idea is based on the Normal distribution. To say we are 95% confidence a value will fall into a range of values is the same as saying it will fall inside -1.96 standard deviations and +1.96 standard deviations of the mean.  A 90% chance would correspond to 1.645 and a 99% chance would correspond to 2.576 deviations. 

Which confidence interval we decide to use depends on the population variance and also the size of the sample. A wide variance in a population would mean a large confidence interval. Certain industries use different confidence intervals to report their results when they are doing tests to answers questions. These tests usually involves fitting a statistical model to data and testing a prediction. To decide if the model works, they need to know if the result is statistically significant. To do this the confidence intervals are used, if the test result is outside these intervals, or above a certain alpha value (usually 0.05), it unlikely the model is getting the right answer by chance. We will discuss this more later in hypothesis testing. 

### Z-score
We only need the standard deviation and mean to use Confidence Intervals. To help us understand what are the critical values and their related probabilities. We need to standardize our Normal Distribution. To do this, we use z-scores. A standard Normal distribution has a mean of zero and standard deviation of one. The z-score is a number on the horizontal which corresponds to a number of standard deviations. So a z-score of 3 means that we are 3 standard deviations from the mean to the right. A z-score also comes with a z-score table, we can use this to calculate the area under the standard normal distribution, this area will give us a probability (and of course there is tools in R to help so we never really need to check a table, although could be useful with electricity goes out). If our distribution is normal for a give variable, then these z-score make it real easy to see for each value the probability of getting that value and the distance the value is from the mean. 

<!-- The significance level is an expression of how rare your results are, under the assumption that the null hypothesis is true. It is usually expressed as a “p-value,” and the lower the p-value, the less likely the results are due purely to chance. -->

The critical values for a 95% confidence is -1.96 or +1.96 as we said above, these are the values in terms of z-score or standard deviations. If we get a z-score higher or lower than this, we know that that value is statistically unlikely. 

```{r, echo=FALSE, fig.cap="Standard Normal Distribution", out.width = '100%'}
knitr::include_graphics("normaldistri.png")
```

In the diagram above, you can see how a 95% confidence interval relates to a 1.96 z-score. 2.5% of the area is shaded in in blue, twice that on each side is 5% which is 100% - 5%.

In green you can also see the area which are divided by the -1.96 z-score. These areas are the probabilities or p-values of a event falling into that z-score range. 

### skew and kurtosis analysis

We would expect the calculation of skew and kurtosis to be at least less than approx absolute 2 (1.96 for a 95% confidence interval at p < .05). So what we need to do is check the z-score of skew. 
Above we calculated a skew of 1.599138. Putting that on our magnificent Standard Normal Distribution figure below. We see it falls in the p < 0.05 range. 
```{r, echo=FALSE, fig.cap="Standard Normal Distribution for skew and kurtosis", out.width = '100%'}
knitr::include_graphics("normaldistri_skew.png")
```

We also calculated a kurtosis of -1.733549.

Sometimes a skew and kurtosis maybe outside our confidence range, however Discovery Statistics with R -@field2012discovering estimates that if we have a sample size of 200 or more, it may be more important to look at the shape of the distribution and pay less attention to these scores above. 

We say the z-value is significant if it is in those blue regions of the figure above. Significant means important and in the case of skew or kurtosis it's not good if it is very significant. 

*Another way*
Using skew.2SE from pastecs::stat.desc

We can determine if the skew is significant also, skew.2SE is 0.79604109916. This statistic is the skew divided by 2 standard errors. For this to be significant. skew.2SE must be greater than ~1 (or 1.96/2 which is `r 1.96/2`). It's not. 

Using kurt.2SE from pastecs::stat.desc

kurtosis divided by 2 standard errors we have -0.92161679721. Again kurtosis is just greater than -1 or we could say the absolute value is less than 1. 

*Another way*

In other to show another way of testing for skew and kurtosis which is called the Shapiro–Wilk test, we need an introduction to Hypothesis testing. 

### Hypothesis Testing

We make a hypothesis about the outcome of some experiment. We can make an example from our data set, let's say students who have more "studytime" achieve better grades ("g3"). 

We do the experiment. It's already done, because we have the data. 

**H**<sub>**0**</sub>: The **Null hypothesis** would be that "studytime" has no affect on grade results, that "studytime" makes no difference.  

**H**<sub>**1**</sub>: The **Alternative hypothesis** would be the hypothesis we made above, that students who have more "studytime" achieve better grades.


Afterwards...

For both these hypothesisesesss:

We can either reject the hypothesis(we were wrong) or fail to reject the hypothesis(we are not completely wrong).

We would really like to reject the Null hypothesis. 

In order to decide if we reject or fail to reject, we run the data through sometime called a statistical test.

There are two types of errors which can result form a hypothesis test
1. type I: when we reject the Null hypothesis when it is true, probability of committing a type I error is called the significance level, also called alpha. alpha for us is usually 0.05. But it's depends on the area/industry. False Positive
2. type II: when we fail to reject the Null hypothesis when it is false, probability of committing a type I error is called beta. The probability of not committing type II is called the power. False Negative

I liked Wikipedia's description of these:
type I: "an innocent person is convicted"
type II: "a guilty person is not convicted"

```{r, echo=FALSE, fig.cap="Type I and Type II Errors", out.width = '100%'}
knitr::include_graphics("typeI_typeII.png")
```

The strength of the evidence of is determined by the measureed p-value of the test and by the region of acceptance.  

### Shapiro–Wilk test

Another way to check if our variable has a normal distribution is do the Shapiro–Wilk test. 

This test compares the mean and standard deviation of our data to a normally distributed set of scores withe h same mean and standard deviation. 

```{r}
shapiro.test(studentdf$g3.x)
```

The test result shows the test statistic and the p-value. 

The Null hypothesis is that there is no normal distribution in this data, it's just random stuff. 
The alternative hypothesis is that it's a normal distribution.

Our result has a very small p-value, so the probability that the Null hypothesis is true is tiny, so we can accept the Alternative. 

A p-value of less than 0.05 is statistically significant here, so if our p-value was greater than 0.05. We could not reject **H**<sub>**0**</sub>.

This test along with the Kolmogorov-Smirnov test are usually not the greatest indicators to a varaible being non-normal. 
The best way to test for normality is outlined already in the section [dispersion]. When testing again for normality I will refer to this section. 

### Using Normal Distribution to find outliers 
Now by calculating the percentage of standardized scores for the variable itself that are outside our acceptable range
we can see how far they are away from being normal. 
Calculate the percentage of standardised scores that are greater than 1.96
```{r}
ztpcoiss<- abs(scale(studentdf$g3.x))

FSA::perc(as.numeric(ztpcoiss), 1.96, "gt")
FSA::perc(as.numeric(ztpcoiss), 2.58, "gt")
FSA::perc(as.numeric(ztpcoiss), 3.29, "gt")
```
So 4% of our data lies outside 1.96 standard deviations of the mean or outside the 95% confidence range.
0% are outside of the 99% confidence interval and of course that means also 0% of our data lies outside the 99.9% confidence interval. 

95% of our data is within the acceptable range, so we can treat the data as normal. :relieved:

Since our sample size is larger than 80, a case is an outlier if it's standard score is +/- 3.29. So we have no outliers. HOwever at the moment we are ignoring missing data, that's eh values we made NA earlier. 

```{r, echo=FALSE,eval=FALSE}
by(data = cbind(data=studentdf$school,data=studentdf$g3.x), INDICES = studentdf$school, FUN = psych::describe)
```

### G3 Grades Summary 

Heuristic| value
--|--
Standarised score of skew | 1.599138 
Standarised score of kurtosis | -1.733549 
Standarised score of variables | 4.1 % outside +/- 1.96
Standarised score of variables | 0% outside +/- 3.29 (no outliers)
Currently ignoring missing data. | 

## Reason (Nominal)

Reason has the following description in the data set.
```
11 reason - reason to choose this school (nominal: close to "home", school "reputation", "course" preference or "other")
```
As we explained earlier it is nominal because there is no ordering or direction in this variable. In the R language we call this column a factor. 

The best way to visualize this variable is to use a pie chart, bar chart or a frequency table. 
```{r, echo=F}
ggplot(studentdf, aes(x=reason)) + geom_bar()
studentdf %>% count(reason)
# Basic piechart
studentdf %>% 
  count(reason) %>%
  mutate(total = sum(n)) %>%
  group_by(reason) %>%
  mutate(perc = round((n/total)*100)) %>%
  ggplot(aes(x="", y=perc, fill=reason)) +
  geom_bar(stat="identity", width=1, color="white") +
  coord_polar("y", start=0) +
  theme_void() + # remove background, grid, numeric labels 
  geom_text(aes(label = paste(perc, " %" )), color = "white", fontface = "bold", position = position_stack(vjust = 0.5)) +
  labs(title="Count Pie chart for 11 reason - reason to choose this school", caption="(close to \"home\", school \"reputation\", \"course\" preference or \"other\")")
```


## Studytime (Ordinal)

Studytime has the following description in the data set.
```
14 studytime - weekly study time (numeric: 1 - <2 hours, 2 - 2 to 5 hours, 3 - 5 to 10 hours, or 4 - >10 hours)
```
It is ordinal because it has an order, but it is not interval because the different between each value is not the same, also we can't add or subtract values.  

From the join we did earlier with the data from the two subject, we have two columns of studytime, one for Maths(x) and one for Portuguese(y). Let's compare them. 
```{r, results="hold"}
print("Length of studytime.x")
length(studentdf$studytime.x)
a <- is.na(studentdf$studytime.x)
print("Number of NA values in studytime.x")
length(a[a==TRUE])
print("Length of studytime.y")
length(studentdf$studytime.y)
a <- is.na(studentdf$studytime.y)
print("Number of NA values in studytime.y")
length(a[a==TRUE])
print("Are they equal? how many of different? ")
a <- sort(studentdf$studytime.x) == sort(studentdf$studytime.y)
length(a[a==FALSE])
```

Ok, so 2 values in 382. Very similar. But we can see if are not dealing with exactly the same students. 

In R, we can add the information from the levels in the description of studytime.x to the variable and we can do this for all similar type variables. 
In R these are known as ordinal factors. 
```{r}
studentdf$medu = factor(studentdf$medu,levels=c(0:4),labels = c("0 - none","1 - primary education (4th grade)","2 – 5th to 9th grade","3 – secondary education","4 – higher education"), ordered=T)
studentdf$fedu = factor(studentdf$fedu,levels=c(0:4),labels = c("0 - none","1 - primary education (4th grade)","2 – 5th to 9th grade","3 – secondary education","4 – higher education"), ordered=T)
studentdf$traveltime.x = factor(studentdf$traveltime.x,levels=c(1:4),labels = c("1 - <15 min", "2 - 15 to 30 min", "3 - 30 min. to 1 hour", "4 - >1 hour"), ordered=T)
studentdf$traveltime.y = factor(studentdf$traveltime.y,levels=c(1:4),labels = c("1 - <15 min", "2 - 15 to 30 min", "3 - 30 min. to 1 hour", "4 - >1 hour"), ordered=T)
studentdf$studytime.x = factor(studentdf$studytime.x,levels=c(1:4),labels = c("1 - <2 hours","2 - 2 to 5 hours", "3 - 5 to 10 hours","4 - >10 hours"), ordered=T)
studentdf$studytime.y = factor(studentdf$studytime.y,levels=c(1:4),labels = c("1 - <2 hours","2 - 2 to 5 hours", "3 - 5 to 10 hours","4 - >10 hours"), ordered=T)
```

```{r, fig.width = 10, echo=FALSE}
# Plot
t <- studentdf %>% count(studytime.x)
plot1 <- ggplot(t, aes(x="",y=n, fill=studytime.x)) + geom_bar(width = 1, stat = "identity")
t <- studentdf %>% count(traveltime.x)
plot2 <- ggplot(t, aes(x="",y=n, fill=traveltime.x)) + geom_bar(width = 1, stat = "identity")
t <- studentdf %>% count(medu)
plot3 <- ggplot(t, aes(x="",y=n, fill=medu)) + geom_bar(width = 1, stat = "identity")
t <- studentdf %>% count(fedu)
plot4 <- ggplot(t, aes(x="",y=n, fill=fedu)) + geom_bar(width = 1, stat = "identity")
grid.arrange(plot1, plot2, plot3, plot4, ncol=2)
```


## Missing Data

Missing data can come as a result of sampling bias or selection bias. Missing data reduces the probability that the test will reject 
**H**<sub>**0**</sub>. 

We can take a quick look at our data set and see if we have many NA values.
```{r}
t <- sapply(studentdf, function(x) sum(is.na(x)))
t[t>0]
```

It is no surprise here at there is not many NAs. Looking back to [Get started] we merged the Maths and Portuguese results together using the variables "school","sex","age","address","famsize","Pstatus","Medu","Fedu","Mjob","Fjob","reason","nursery","internet" 

Which means if any of these are missing, we won't have them in our combined data frame.  That means alot of the Portuguese grade data is not contained in the merged data frame. 

Missing data reduces also how well sample represents the population, if we had a lot of missing data, it could also lead to invalid conclusions.  

There are three possible patterns to missing data:

1. Data missing at random (MAR) - missing data is not random, but not related to other variables
2. Data missing completely at random (MCAR) - missing data is random, best scenario!
3. Data not missing at random (MNAR) - not random, related to other variables, pretty serious!

Let us check if any of these patterns are seen in the data. The only variables with missing data are the grade results: g2 and g3 for Maths.  
```{r}
library("dplyr")
studentdf %>% filter(is.na(g3.x)) %>% summary()
```

Because our data set is relatively large, we don't expect missing data to have a serious impact. It all goes back to being representative of the population. 

In R we have a library called finalfit which has the function ff_glimpse, whihc we can use to identify missing data.
```{r, echo=FALSE}
ff_glimpse(studentdf)
```
I am going to ignore missing data, which is one of the thing we can do with missing data. 

# Relationships

Before we continue to examine relationships in our data set. We need to discuss the type of tests we can conduct. Depending on the variables types we have a choice of either parametric or non-parametric 

* Parametric tests need to pass some assumptions, that the variable is normally distributed, that the sample variance is homogeneous. These are usually more powerful than non-parametric because we use all the data.
* Non-parametric tests don't need to pass the same assumptions, variables do not need to be normally distributed. Most of these test work on the principle of ranking. 

Below I have organized a list of the statistical tests which apply to each search question. I will explain these in the following sections where I will show an example of each. 
```{r, echo=FALSE, out.extra='id="testtable"', fig.cap="Types of test data and types of Analysis", fig.align = "center", out.width = '55%'}
knitr::include_graphics("test_table_1.png")
```


We will first look at correlations that describes the association between two variables and later t-tests which examine where there is a significant difference between two groups. The tools I use in R will use a t-test to assess the strength of evidence against the null hypothesis, which is that there is no correlation. 

I have read many times that in order to look at relationships in a data set probably we must first ask the questions, it is very bad practice to look and the data and try to work backwards to determine relationships. We must set our alpha level also before beginning. 

The questions I have for this section are:

1. Is there a linear correlation between the G2 result and the G3 result for Maths? (Pearson) (paramteric)
2. Is there a linear correlation between the number of school absences and the G3 result? (Spearman + Kendall) (non paramteric)
3. Grade results in students with a family size greater than 3 differed from those with a smaller family size. (t-test)
4. Is there a difference between grade 1 and grade 3 in Maths for students who paid for extra classes? (paired t-test)
5. Is there a difference in the health of the students between the students who's address is rural vs urban? 

## Correlation (G2 and G3)

Looking at the two variables for Maths. Please refer to [skew-and-kurtosis-analysis] for the g3 analysis of Maths.
Looking at g2, I know there is some missing data but a very small amount. We need to check the standardized scores for skewness and kurtotsis and plot the histogram and Q-Q plot. 
```{r,  results="hold"}
studentdf %>%
  ggplot(aes(x=g2.x)) +
  labs(x="G2 results for Maths") +
  geom_histogram(alpha = .05, binwidth=1, colour="black", aes(y=..density.., fill=..count..)) +
  scale_fill_gradient("Count", low="grey", high="green") +
  stat_function(fun=dnorm, color="red",args=list(mean=mean(studentdf$g2.x, na.rm=TRUE), sd=sd(studentdf$g2.x, na.rm=TRUE)))

#Create a qqplot
qqnorm(studentdf$g2.x)
qqline(studentdf$g2.x, col=2) #show a line on theplot

pastecs::stat.desc(studentdf$g2.x, basic=F)
tpskew<-semTools::skew(studentdf$g2.x)
tpkurt<-semTools::kurtosis(studentdf$g2.x)
tpskew[1]/tpskew[2]
tpkurt[1]/tpkurt[2]
```
The values of skew is good at 1.661684. The Kurtosis is high at -2.320396. We next calculate the percentage of standardized scores that our outside our acceptable range to tell us how big our problem is. 

In the histogram, earlier I converted all 0 grades to NA, so in our data for g2.x and g3.x, there are 12 NAs and 39 NA respectively. I will ignore them. 
```{r, warning=FALSE}
studentdf %>%
  filter(is.na(g2.x)) %>%
  group_by(g2.x) %>%
  summarise(n = n())
studentdf %>%
  filter(is.na(g3.x)) %>%
  group_by(g3.x) %>%
  summarise(n = n())
```

```{r, results="hold"}
zstabsences<- abs(scale(studentdf$g2.x))
FSA::perc(as.numeric(zstabsences), 1.96, "gt")
FSA::perc(as.numeric(zstabsences), 3.29, "gt")
```

At 0.05 level, we need 95% of our data to exist within the bounds of a z-score of 1.96 in order to say it is safe to treat our variable as normal. Since only 4.33 % of my variable g2.x is outside of 1.96 standard deviations and because this sample size is large. 
The following are outliers at 1.96 SDs, these students did really well!
```{r}
studentdf %>%
  mutate(zscale = scale(g2.x)) %>%
  filter(zscale > 1.96 | zscale < -1.96) %>%
  select(zscale, g1.x,g2.x,g3.x)
```

I can treat this as normal and I have no outliers to remove. From earlier analysis we know that g3.x can also be treated as nornal.

G2 Grades Summary:

Heuristic| value
--|--
Standarised score of skew | 1.661684 
Standarised score of kurtosis | -2.320396 
Standarised score of variables | 4.33 % outside +/- 1.96
Standarised score of variables | 0% outside +/- 3.29 (no outliers)
Currently ignoring missing data. | 12 NAs

Correlation Scatter plot (G2 and G3):

```{r}
studentdf %>%
  ggplot(aes(x=g2.x, y=g3.x)) +
  geom_point() + 
  geom_smooth(method = "lm", colour = "Green", se = F) + 
  labs(x = "Grade at Time Inteval 2", y = "Final Grade at Time Inteval 3") 
```

There are three varieties of Correlation test I can perform on g2 and g3.

* Pearson
* Spearman 
* Kendall

Which I choose to use depends alot on the domain of my analysis. I want to use a correlation test which can be compared with other tests conducted in the same domain. Because both variables are continuous and normal Pearson is a clear choice, but for learning purposes lets look at each below.  For Pearson coefficient we make some assumptions; a) our data is continuous (which it is), b) our two variables are paired (we hope they are, although analysis of the data set would say maybe not all are paired) and c) the two grades are independent. d) they should be homoscedasticity (from the plot we can see there is, the variances should be similar as you move along the line, the opposite is heteroscedasticity)

```{r}
#Pearson Correlation
cor.test(studentdf$g2.x, studentdf$g3.x, method='pearson')
```

Spearman and Kandal are only needed if our data did not fit a normal distribution.
Below i will report Spearman's rank correlation rho and Kendall's rank correlation tau:
```{r}
cor.test(studentdf$g2.x, studentdf$g3.x, method = "spearman")
cor.test(studentdf$g2.x, studentdf$g3.x, method = "kendall")
```

To report Pearson coefficient here we say:

`r length(studentdf$g3.x) - 39` student grades at two time intervals, Time 1 G2(M=11.09, SD=3.32) and Time 2 G3(M=11.57, SD=3.28) were investigated. A positive Pearson r correlation coefficient of 0.97 was revealed. There is a really strong correlation between g2 results and the final grade g3 with t(341) = 70 with a p-value < 0.001

## Correlation (absences and G3) 

Again we will use hypothesis testing to determine if there is a correlation between the number of school absences and the G3 result. 
To make a correlation, we use tests which give us a correlation coefficient, r. This coefficient tells us the strength and the direction of the linear relationship between the number of school absences and the G3 result.

Once we get this correlation coefficient, r, we need to then check if it is statistically significant and whether it can be used to apply to the population.

We start as always with stating the Null and alternative hypothesis:

**H**<sub>**0**</sub>: There is NOT a significant linear relationship between the number of school absences for Maths and the Maths G3 result.

**H**<sub>**a**</sub>: There IS a significant linear relationship between the number of school absences for Maths and the Maths G3 result.

We have already studied G3 in the previous section for normality. Let's study number of school absences now. 

```{r,  results="hold"}
print("Length of absences.x in Maths")
length(studentdf$absences.x)
a <- is.na(studentdf$absences.x)
print("Number of NA values in absences.x in Maths")
length(a[a==TRUE])
print("Length of absences.y in Portuguese")
length(studentdf$absences.y)
a <- is.na(studentdf$absences.y)
print("Number of NA values in absences.y in Portuguese")
length(a[a==TRUE])
print("Are they equal? how many of different? ")
a <- sort(studentdf$absences.x) == sort(studentdf$absences.y)
length(a[a==FALSE])
```

```{r}
studentdf %>% 
  filter(absences.x < 40,
         absences.y < 40) %>%
  select(absences.x, absences.y) %>%
  gather(key=Type, value=Value) %>% 
  ggplot(aes(x=Value,fill=Type)) + 
  labs(x="number of school absences") +
  geom_density(binwidth=1, alpha=0.3, position="dodge")
```

Ok, so I continue with Maths absences. 
```{r,  results="hold"}
studentdf %>%
  ggplot(aes(x=absences.x)) +
  labs(x="number of school absences for Maths") +
  geom_histogram(alpha = .05, binwidth=1, colour="black", aes(y=..density.., fill=..count..)) +
  scale_fill_gradient("Count", low="grey", high="green") +
  stat_function(fun=dnorm, color="red",args=list(mean=mean(studentdf$absences.x, na.rm=TRUE), sd=sd(studentdf$absences.x, na.rm=TRUE)))

pastecs::stat.desc(studentdf$absences.x, basic=F)
tpskew<-semTools::skew(studentdf$absences.x)
tpkurt<-semTools::kurtosis(studentdf$absences.x)
tpskew[1]/tpskew[2]
tpkurt[1]/tpkurt[2]
zstabsences<- abs(scale(studentdf$absences.x))
FSA::perc(as.numeric(zstabsences), 1.96, "gt")
FSA::perc(as.numeric(zstabsences), 3.29, "gt")
```

The question we need to ask is our distribution normal? we can see it's not normal, how far away is it from normal? 
Standardised scores for skewness and kurtosis between -2 and +2 are considered acceptable in order to prove normal univariate distribution. So our values of skew and kurtosis are far outside of normal as can be seen in the the figures above. Therefore we cannot use Pearson coefficient this time. I will use Spearman's rank correlation and Kendall's rank correlation. 
```{r}
studentdf %>%
  ggplot(aes(x=absences.x, y=g3.x)) +
  geom_point() + 
  geom_smooth(method = "lm", colour = "Blue", se = F) + 
  labs(x = "Number of absenses in Maths", y = "Final Grade at Time Inteval 3 for Maths") 
```

Looking at this plot I can see that I have a high degree of homoscedasticity. 

Using Spearman:
```{r}
cor.test(studentdf$absences.x, studentdf$g3.x, method = "spearman")
```

The correlation coefficient between the two variables is moderate at -0.26. It indicates a negative relationship, so the more absent days you have, the worse your G3 results. The significance value is very small at p < 0.001, so we can reject the NUll hypothesis that there is no relationship. 

We could use Kendall also, Kendall is used rather that Spearman when the data set is small and is also useful when the many values of a variables are similar. Kendall produces a Tau. 
```{r}
cor.test(studentdf$absences.x, studentdf$g3.x, method = "kendall")
```
The result is a coefficient that is closer to zero. The significance of the result is the same as Spearman. 

Grade g3 results were significantly related with grade g2 results, tau = 0.2, p < 0.001. 


## T-Test (G3 and family size) 

The question for this section is:

Grade results in students with a family size greater than 3 differed from those with a smaller family size.

The variables involved are g3.x which is a ratio type and famsize which is a Nominal type varible. 

We have investigated g3.x in previous sections already, let us look at the famsize variable. The description of the data set says:
```
5 famsize - family size (binary: 'LE3' - less or equal to 3 or 'GT3' - greater than 3)
```
```{r}
studentdf %>% 
  group_by(famsize) %>%
  count(famsize)
```
We have no missing
```{r, out.width = '60%',  fig.cap="G3 Results vs family size", fig.align = "center"}
studentdf %>% 
  count(famsize) %>%
  mutate(total = sum(n)) %>%
  group_by(famsize) %>%
  mutate(perc = round((n/total)*100)) %>%
  ggplot(aes(x="", y=perc, fill=famsize)) +
  geom_bar(stat="identity", width=1, color="white") +
  coord_polar("y", start=0) +
  theme_void() + # remove background, grid, numeric labels 
  geom_text(aes(label = paste(perc, " %" )), color = "white", fontface = "bold", position = position_stack(vjust = 0.5)) +
  labs(title="G3 Results vs family size", caption="'LE3' - less or equal to 3 or 'GT3' - greater than 3")
```

Now to plot a histograms for each group. One group is families with more than 3 and the other group is family with less than or equal to 3. We have seen teh distrubtuion for g3 maths results already by now to look at those distributions when we spearate them by famsize.  
```{r}
studentdf %>%
  ggplot(aes(x=g3.x)) + 
  facet_wrap(vars(famsize)) +
  geom_histogram(binwidth=2, colour="black") + 
  scale_fill_gradient("Count", low="#DCDCDC", high="#7C7C7C")
```

```{r}
psych::describeBy(studentdf$g3.x, studentdf$famsize, mat=TRUE)
```
The values of skew and kurtotsis reported by the two are within the acceptable range for both to be considered normal.

Looking at the [Test Table](#testtable), we have a normal distribution variable and 2 independent groups, so our choice of test will be the t-test. One of the assumptions for a t-test is that we have homogeneity of variance. Homogeneous, or equal, variance exists when the standard deviations of samples are approximately equal.

The t-test produces two values as its output: t-value and degrees of freedom. Higher values of the t-value, also called t-score, indicate that a large difference exists between the two sample sets. The smaller the t-value, the more similarity exists between the two sample sets. Degrees of freedom, we will deal with again, it is essentially the number of observations in the data that are free to vary when estimating statistical parameters. It is essential for assessing the importance and the validity of the null hypothesis.

I will state the two hypothesis for this test:

**H**<sub>**0**</sub>: There is no difference in results for a student with a big family to one with a smaller family

**H**<sub>**a**</sub>: There is a difference in results for a student with a big family to one with a smaller family


We now conduct Levene's test for homogeneity of variance using the library car. The null hypothesis is that variances in groups are equal so to assume homogeneity we would expect probability to not be statistically significant.
```{r}
car::leveneTest(g3.x ~ famsize, data=studentdf)
```
The result gave a p-value of 0.6722, so we cannot reject the Null hypothesis. Therefore it is concluded that there is no difference between the variance in our sample and in the population. 
```{r}
studentdf %>%
  ggplot(aes(x = as.numeric(row.names(studentdf)), y = g3.x, color=famsize)) +
  geom_point(size=2) + 
  labs(y="G3 - final grade")
```

```{r}
p1 <- studentdf %>%
  ggplot(aes(x=famsize, y=g3.x, fill=famsize)) +
    geom_boxplot() +
    scale_fill_viridis(discrete = TRUE, alpha=0.6) +
    geom_jitter(color="black", size=0.4, alpha=0.9) +
    ggtitle("A boxplot with Family size and the Grade 3 results") +
    ylab("Grade 3 results")
p2 <- studentdf %>%
  ggplot(aes(x=famsize, y=g3.x, fill=famsize)) +
    geom_violin() +
    scale_fill_viridis(discrete = TRUE, alpha=0.6) +
    geom_jitter(color="black", size=0.4, alpha=0.9) +
    ggtitle("A volin plot with Family size and the Grade 3 results") +
    ylab("Grade 3 results")
grid.arrange(p1, p2, ncol=2)
```

Now we conduct the t-test using the stats package. Because our variance in g3.x passed the Levee's test, we can set var.equal = TRUE and then the stats::t.test function will not use the welsh modification.  
```{r}
stats::t.test(g3.x~famsize, var.equal=TRUE, data=studentdf)
```
Out of interest, let's check the result with the welsh modification:
```{r}
stats::t.test(g3.x~famsize, var.equal=FALSE, data=studentdf)
```

The t-test yielded a p-value of 0.41 meaning that no statistically significant difference was found. 

To quantify the effect we look for the Effect size. We have saw one of these already with Pearsons Coefficient, Another is Cohen’s d, Cohen's d can be used as an effect size statistic for a two-sample t-test.
$$Cohen\ d\ (effect\ size) = {2 t \over \sqrt{df}}$$

```{r}
res <- stats::t.test(g3.x~famsize, var.equal=TRUE, data=studentdf)
#Calculate Cohen's d
#artithmetically
effcd=round((2*res$statistic)/sqrt(res$parameter),2)
#Using function from effectsize package
effectsize::t_to_d(t = res$statistic, res$parameter)
```

Eta squared 
$$Eta = {t^2 \over t^2 + df}$$
```{r}
effes=round((res$statistic*res$statistic)/((res$statistic*res$statistic)+(res$parameter)),3)
effes
```

```{r, echo=FALSE, out.extra='id="effect"', fig.cap="Cohen's d annd Eta", fig.align = "center", out.width = '40%'}
knitr::include_graphics("effect_sizes.png")
```

Reporting the results with Cohen’s d effect
An independent-samples t-test was conducted to compare Maths grade 2 results for students who had families less than or equal to 3 and those who had families greater than 3. No significant difference in the Maths grades was found (M= 11.80, SD= 3.23 for students with a family size less than or equal to 3, M=11.48, SD= 3.27 for students who had families greater than 3), t(341) = -0.82, p = 0.41. Cohen's d also indicated a very weak effect size (-0.09).

Reporting the results with eta squred effect
An independent-samples t-test was conducted to compare Maths grade 2 results for students who had families less than or equal to 3 and those who had families greater than 3. No significant difference in the Maths grades was found (M= 11.80, SD= 3.23 for students with a family size less than or equal to 3, M=11.48, SD= 3.27 for students who had families greater than 3), t(341) = -0.82, p = 0.41. A very small effect size was also indicted by the eta squared value (0.002).


## Paired t-test

Question: Is there a difference between grade 1 and grade 3 in Maths for students who paid for extra classes? 

We have already inspected G3 in Maths for normality, I will quickly show that G1 is also normal.  
```{r,  results="hold"}
studentdf %>%
  ggplot(aes(x=g1.x)) +
  labs(x="G1 results for Maths") +
  geom_histogram(alpha = .05, binwidth=1, colour="black", aes(y=..density.., fill=..count..)) +
  scale_fill_gradient("Count", low="grey", high="green") +
  stat_function(fun=dnorm, color="red",args=list(mean=mean(studentdf$g1.x, na.rm=TRUE), sd=sd(studentdf$g1.x, na.rm=TRUE)))

#Create a qqplot
qqnorm(studentdf$g1.x)
qqline(studentdf$g1.x, col=2) #show a line on theplot
pastecs::stat.desc(studentdf$g1.x, basic=F)
tpskew<-semTools::skew(studentdf$g1.x)
tpkurt<-semTools::kurtosis(studentdf$g1.x)
tpskew[1]/tpskew[2]
tpkurt[1]/tpkurt[2]
```
Skew and kurtosis are both significant, because they are above 1.96 standard deviations on the z-scale. Need to investigate how big a problem we have. 
```{r}
zstabsences<- abs(scale(studentdf$g1.x))
FSA::perc(as.numeric(zstabsences), 1.96, "gt")
FSA::perc(as.numeric(zstabsences), 3.29, "gt")
```
3.4 % of values are outside 1.96. 0 % of the values are outside 3.29, these would be considered serious outliers. Let's check what these values outside 1.96 are:
```{r}
studentdf %>%
  mutate(zscale = scale(g1.x)) %>%
  filter(zscale > 1.96 | zscale < -1.96) %>%
  select(zscale, g1.x,g2.x,g3.x)
```

One poor student had a bad result and missed the others for g2 and g3. Since we are dealing with a large sample set and we have no serious outliers. We shall use the full set of Maths g1 results. 

So the last variable of question here is a categorical one:
```
18 paid - extra paid classes within the course subject (Math or Portuguese) (binary: yes or no)
```
We are interested in the variable for Maths.
```{r}
studentdf %>%
  count(paid.x)
```

So what we have in total is one categorical independent variable and one continuous variable measured at two times(G1 adn G3).
Looking again at the [Test Table](#testtable). Because our continuous variable is normal, we can use the parametric Paired T-test.

So lets look at the subset of these Grades where students had paid classes and a quick check to make sure they're still normal data. 

```{r}
paid_students_maths <- studentdf %>%
  filter(paid.x == "yes")
paid_students_maths %>%
  ggplot(aes(x=g1.x)) +
  labs(x="G1 results for Maths") +
  geom_histogram(alpha = .05, binwidth=1, colour="black", aes(y=..density.., fill=..count..)) +
  scale_fill_gradient("Count", low="grey", high="green") +
  stat_function(fun=dnorm, color="red",args=list(mean=mean(paid_students_maths$g1.x, na.rm=TRUE), sd=sd(paid_students_maths$g1.x, na.rm=TRUE)))

#Create a qqplot
qqnorm(paid_students_maths$g1.x)
qqline(paid_students_maths$g1.x, col=2) #show a line on theplot
pastecs::stat.desc(paid_students_maths$g1.x, basic=F)
tpskew<-semTools::skew(paid_students_maths$g1.x)
tpkurt<-semTools::kurtosis(paid_students_maths$g1.x)
tpskew[1]/tpskew[2]
tpkurt[1]/tpkurt[2]

paid_students_maths %>%
  ggplot(aes(x=g3.x)) +
  labs(x="G3 results for Maths") +
  geom_histogram(alpha = .05, binwidth=1, colour="black", aes(y=..density.., fill=..count..)) +
  scale_fill_gradient("Count", low="grey", high="green") +
  stat_function(fun=dnorm, color="red",args=list(mean=mean(paid_students_maths$g3.x, na.rm=TRUE), sd=sd(paid_students_maths$g3.x, na.rm=TRUE)))

#Create a qqplot
qqnorm(paid_students_maths$g3.x)
qqline(paid_students_maths$g3.x, col=2) #show a line on theplot
pastecs::stat.desc(paid_students_maths$g3.x, basic=F)
tpskew<-semTools::skew(paid_students_maths$g3.x)
tpkurt<-semTools::kurtosis(paid_students_maths$g3.x)
tpskew[1]/tpskew[2]
tpkurt[1]/tpkurt[2]
```
```{r}
stats::t.test(paid_students_maths$g1.x,paid_students_maths$g3.x,paired=TRUE)
```
```{r}
res <- stats::t.test(paid_students_maths$g1.x,paid_students_maths$g3.x,paired=TRUE)
effes=round((res$statistic*res$statistic)/((res$statistic*res$statistic)+(res$parameter)),3)
effes
```

The result is that we don't see a significant difference.

"A paired-samples t-test was conducted for the students who got paid classes for the time intervals G1(M=11, SD=2.99) and G3 (M=11.41, SD=3.1). The means increased by 0.266 with a 95% confidence interval ranging from 0.49 to 0.051. Test result was t(168) = -2.44 and p-value was 0.016. The result is not significant at p < .05. The Eta squared statistic (0.034) indicated a small effect size"

I would have expected a significant difference here since we are paying for extra classes. But perhaps we started paying for classes before the first Grade G1. Also there are other things which could have contributed to the difference or lack of difference between these grades. 

## Health for Rural vs Urban

The question:

Is there a difference in the health of the students between the students who's address is rural vs urban? 

I need to compare both Maths and Portuguese. Let's see if our health results are the same:
```{r,  results="hold"}
print("Length of health.x in Maths")
length(studentdf$health.x)
a <- is.na(studentdf$health.x)
print("Number of NA values in health.x in Maths")
length(a[a==TRUE])
print("Length of health.y in Portuguese")
length(studentdf$health.y)
a <- is.na(studentdf$health.y)
print("Number of NA values in health.y in Portuguese")
length(a[a==TRUE])
print("Are they equal? how many of different? ")
a <- sort(studentdf$health.x) == sort(studentdf$health.y)
length(a[a==FALSE])
```
So 3 in 382 are different. Which isn't even 1%. I will take Maths. 

```{r}
studentdf %>%
  ggplot(aes(x = as.numeric(row.names(studentdf)), y = health.x, color=address)) +
  geom_point(size=2) + 
  labs(y="Health (1 bad - 5 good)", x="student number")
studentdf %>%
  ggplot(aes(x=address, y=health.x, fill=address)) +
    geom_boxplot() +
    scale_fill_viridis(discrete = TRUE, alpha=0.6) +
    geom_jitter(color="black", size=0.4, alpha=0.9) +
    ggtitle("A boxplot with Address and Health") +
    ylab("Grade 3 results")
```
```{r}
studentdf %>%
  ggplot(aes(x=health.x)) +
  labs(x="Health on scale from 1-5") +
  geom_histogram(alpha = .05, binwidth=1, colour="black", aes(y=..density.., fill=..count..)) +
  scale_fill_gradient("Count", low="grey", high="blue") +
  stat_function(fun=dnorm, color="red",args=list(mean=mean(studentdf$health.x, na.rm=TRUE), sd=sd(studentdf$health.x, na.rm=TRUE)))
pastecs::stat.desc(studentdf$health.x, basic=F)
tpskew<-semTools::skew(studentdf$health.x)
tpkurt<-semTools::kurtosis(studentdf$health.x)
tpskew[1]/tpskew[2]
tpkurt[1]/tpkurt[2]
zstabsences<- abs(scale(studentdf$health.x))
FSA::perc(as.numeric(zstabsences), 1.96, "gt")
FSA::perc(as.numeric(zstabsences), 3.29, "gt")
studentdf %>%
  group_by(address) %>%
  mutate(mdn = median(health.x),
         iqr = IQR(health.x)) %>%
  group_by(address, mdn, iqr) %>%  
  summarise()
```

This health variable is highly skewed. We cannot consider it normal, therefore we must use non-parametric tests.
Looking again at the [Test Table](#testtable). We have two independent groups, which are students who live Urban and those who live in Rural. So we choose the Mann Whitney. 

```{r}
wilcox.test(health.x~address, data = studentdf)
```

Wilcoxon rank sum test tells us the difference is not significant. We now need to calculate Rosenthal's r:
$$r = {Z\over \sqrt N }$$
We need a z-score for this. We can use qnorm() to get it from the p-value. The z-value is `r qnorm(0.7397/2)` and N is 382. 
Rosenthal's r is then `r (qnorm(0.7397/2))/sqrt(382)`


Reporting:
"Health levels for students who had an Urban address(Mdn=4 IQR=2) did not differ significantly from those who had an Rural address(Mdn=4 IQR=2).(U=12473, z=0.33, p=0.74, r=0.17)

My Analysis is that this should have been quite clear from the box plot and was only worth going this far to demonstrate a Mann-Whitney test. 


## More
Parametric are most powerful, more robuseness becuse we use every score
Parametric or non parametric
pearson for correlation 

non para:
spearson kendall
kendall more reilable

Which can I use to compare?

Lecture 5 video 51 minutes

use cooks if deleting outliers 

<!-- 5.3. Assumptions of parametric data -->

<!-- alpha 0.05 fo education grades have an error -->
<!-- ok to use this -->
<!-- but in medical testing, more regigroous, 0.05 -->

# Explore

# Analysis

# Model

# Report

# Using R



# References